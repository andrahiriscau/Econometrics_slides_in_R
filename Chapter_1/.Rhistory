options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, dev.args = list(png = list(type = "cairo")), warning = FALSE, message = FALSE, fig.width = 8, fig.height = 6)
library(tidyverse)
library(directlabels)
library(ggdag)
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
knitr::include_graphics('Lecture_1_Relationships.png')
knitr::include_graphics('Lecture_1_MinWage.jpg')
data <- sample(c("Heads","Tails"),500,replace=TRUE)
mean(data=="Heads")
data <- sample(c("Heads","Tails"),500,replace=BLUE)
mean(data=="heads")
rm(list=ls()))
rm(list=ls())
data(mtcars)
force(mtcars)
View(mtcars)
mean(mtcars$mpg)
help (mean)
help (mtcard)
help (mtcara)
help (mtcars)
library(tidyverse)
library(wooldridge)
# Additional help
# www.tidyverse.org
#https://r4ds.had.co.nz/
?loanapp
# allows us to comment
# loanapp data from wooldridge package
# ?loanapp
mean(loanapp$price)
# allows us to comment
# loanapp data from wooldridge package
# ?loanapp
load(data=loanap,"wooldridge")
# allows us to comment
# loanapp data from wooldridge package
# ?loanapp
data (loanap, package='wooldridge')
mean(loanapp$price)
# allows us to comment
# loanapp data from wooldridge package
# ?loanapp
data (loanapp, package='wooldridge')
mean(loanapp$price)
View(loanapp)
# allows us to comment
# loanapp data from wooldridge package
# ?loanapp
data (loanapp, package='wooldridge')
mean(loanapp$price)
# pipe you should think about "then"
loanapp %>%
summarize(avg_price=mean(price))
# allows us to comment
# loanapp data from wooldridge package
# ?loanapp
data (loanapp, package='wooldridge')
mean(loanapp$price)
# pipe you should think about "then"
loanapp %>%
summarize(avg_price=mean(price))
mean (loanapp[loanapp$price<mean(loanapp$price)],)
mean (loanapp[loanapp$price<mean(loanapp$price)]$price,)
mean (loanapp[loanapp$price < mean(loanapp$price),]$price)
mean (loanapp[loanapp$price < mean(loanapp$price),]$price)
loanapp %>%
filter(price< mean(price)) %>%
summarize(avg_price=mean(price))
round(mean (loanapp[loanapp$price < mean(loanapp$price),]$price), digits=2)
loanapp %>%
filter(price< mean(price)) %>%
summarize(avg_price=mean(price)) %>%
round(digits=2)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, dev.args = list(png = list(type = "cairo")), warning = FALSE, message = FALSE, fig.width = 8, fig.height = 6)
library(tidyverse)
library(directlabels)
library(ggdag)
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
knitr::include_graphics("ggplot.png")
library (ggplot)
library (ggplot2)
library(gapminder)
library (ggplot2)
install.packages("gapminder")
library(gapminder)
gapminder
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
gapminder
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp)) # the date and variables we use
p
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp)) # the date and variables we use
p+ geom_point()
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp)) # the date and variables we use
p+ geon_bar()
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp)) # the date and variables we use
p+ geom_bar()
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp)) # the date and variables we use
p+ geom_boxplot()
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp)) # the date and variables we use
p+ geom_point()
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp,color=continent))+ # the date and variables we use
geom_point() # type of plot
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp,color=continent))+ # the date and variables we use
geom_point() # type of plot
p
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp,color=continent))+ # the date and variables we use
geom_point() # type of plot
p
ggsave("my_figure.pdf", plot = p)
library (ggplot2)
#install.packages("gapminder")
library(gapminder)
p<-ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp,color=continent))+ # the date and variables we use
geom_point()+ # type of plot
scale_x_log10(labels = scales::dollar) + # change the units of x variable
labs(x = "GDP Per Capita", y = "Life Expectancy in Years",
title = "Economic Growth and Life Expectancy",
subtitle = "Data points are country-years",
caption = "Source: Gapminder.")
p
ggsave("my_figure.pdf", plot = p) #save your plot as pdf
?scale_x_log10
p <- ggplot(data = midwest,
mapping = aes(x = area))
p + geom_histogram(bins = 10)
p <- ggplot(data = midwest,
mapping = aes(x = area))
p + geom_histogram(bins = 10)
p <- ggplot(data = midwest,
mapping = aes(x = area, fill = state, color = state))
p + geom_density(alpha = 0.3)
data <- sample(c("Heads","Tails"),500,replace=TRUE)
mean(data=="Heads")
rm(list=ls())
p + geom_density(alpha = 0.3)
help()
?dplyrt
?dplyr
??dplyr
